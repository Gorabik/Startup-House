from telebot import TeleBot, types
from dotenv import load_dotenv
import os
import openai

load_dotenv("/.env")

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

logic_mode = {}

@bot.message_handler(commands=["logic_mode"])
def enable_logic_mode(message):
    logic_mode[message.chat.id] = True
    bot.reply_to(message, "üß† –†–µ–∂–∏–º –ª–æ–≥–∏–∫–∏ –≤–∫–ª—é—á—ë–Ω! –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ–±—ä—è—Å–Ω—è—Ç—å, –ø–æ—á–µ–º—É –æ—Ç–≤–µ—á–∞—é —Ç–∞–∫ –∏–ª–∏ –∏–Ω–∞—á–µ.")

@bot.message_handler(func=lambda msg: True)
def handle_text(message):
    chat_id = message.chat.id
    text = message.text.lower()
    explain = logic_mode.get(chat_id, False)

    if "–ø—Ä–∏–≤–µ—Ç" or "hello in text:
        response = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Startup House! üöÄ"
        if explain:
            response += "\n\nüìå –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –Ω–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ '–ø—Ä–∏–≤–µ—Ç'."
        bot.reply_to(message, response)

    elif "–∏–∏" in text or "–±–∏–∑–Ω–µ—Å" in text:
        response = "–û—Ç–ª–∏—á–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ò–ò –≤ –±–∏–∑–Ω–µ—Å–µ? üí°"
        if explain:
            response += "\n\nüìå –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –Ω–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ '–∏–∏' –∏–ª–∏ '–±–∏–∑–Ω–µ—Å'."
        bot.reply_to(message, response)

    else:
        try:
            messages = [
                {"role": "user", "content": message.text}
            ]
            if explain:
                messages.insert(0, {
                    "role": "system",
                    "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –¥–∞–ª —Ç–∞–∫–æ–π –æ—Ç–≤–µ—Ç."
                })

            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=messages,
                temperature=0.7
            )
            reply = response.choices[0].message['content']
            bot.reply_to(message, reply)

        except Exception as e:
            bot.reply_to(message, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòì")

bot.infinity_polling()
